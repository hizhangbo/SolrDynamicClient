1.为什么选择spring-boot?
play framework的问题（java版本）
a.最新的2.5版本无法编译成war包，play war plugin 最新只支持到2.4（官方推荐netty，但尽量还是用tomcat，环境熟悉好配置）
b.使用2.4各种版本都无法通过配置sbt plugin生成项目，然而通过activator无法生成指定版本的项目
c.play只能通过sbt构建，play只想作为接口层，所以引用的其他的模块也必须使用sbt构建（sbt语法也较为复杂，maven更简单）
d.solrj和play中有相同的第三方依赖（slf4j-log4j12），在不同的module中，sbt竟然不能智能合并，导致编译失败



2.传统分层和动态反射的两种实现

传统分层
优点：逻辑清晰，有利于模块化开发，效率高，接口参数确定易校验
缺点：代码冗余度高

动态反射
优点：代码利用率高，项目结构简化，无需重复开发，配置即可使用
缺点：solrj和spring高度依赖配置，紧耦合



3.待完善
统一错误入口
json.facet的设计，动态的生成对传入参数校验
尝试spring中视图引擎